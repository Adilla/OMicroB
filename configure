#! /bin/bash

cd $(dirname "$0")

################################################################################

function error () {
    echo "$@" 1>&2
    exit 1
}

function usage () {
    echo "$@" 1>&2
    error "Usage: $0 [ OPTIONS... ]
 -bindir <dir>   Directory where the binaries will be installed
                 (default: /usr/local/bin)
 -libdir <dir>   Directory where the OCaml library PIC tools will be installed
                 (default: /usr/local/lib/ocapic)
 -mandir <dir>   Directory where the manual pages will be installed
                 (default: /usr/local/man)
 -prefix <dir>   Set bindir, libdir and mandir to <dir>/bin, <dir>/lib/ocapic
                 and <dir>/man respectively
 -cc <cmd>       C compiler to use for building the system
 -pics <regexp>  Choose PIC to be managed by OCaPIC"
}

function check_command () {
    which "$1" > /dev/null
    if [ $? -ne 0 ]; then
        error "Error: \"$1\" not installed"
    fi
}

function check_absolute_path () {
    case "$1" in
        /*);;
        *) error "Error: \"$1\" is not an absolute path";;
    esac
}

function remove_trailing_slash () {
    echo "$1" | sed 'sX^\(.*[^/]\)/*$X\1X'
}

################################################################################

check_command "ocaml"
check_command "ocamlc"
check_command "ocamlopt"
check_command "ocamlbuild"
check_command "ocamldep"
check_command "ocamldoc"
check_command "mkdir"
check_command "rmdir"
check_command "chmod"
check_command "grep"
check_command "echo"
check_command "cat"
check_command "sed"
check_command "cp"
check_command "rm"
check_command "ar"
check_command "cp"

################################################################################

OCAML="$(wich ocaml.opt 2> /dev/null || which ocaml)"
OCAMLOPT="$(which ocamlopt.opt 2> /dev/null || which ocamlopt)"
OCAMLC="$(which ocamlc.opt 2> /dev/null || which ocamlc)"
OCAMLDOC="$(wich ocamldoc.opt 2> /dev/null || which ocamldoc)"
OCAMLBUILD="$(which ocamlbuild)"
OCAMLCLEAN="$(which ocamlclean)"
CAMLWHERE="$(ocamlc -where)"
VERSION="$(cat VERSION)"
ROOT="$(pwd)"

################################################################################

BINDIR=/usr/local/bin
LIBDIR=/usr/local/lib/omicrob
MANDIR=/usr/local/man

while [ $# -ne 0 ]; do
    case "$1" in
        -bindir)
            check_absolute_path "$2"
            BINDIR="$(remove_trailing_slash "$2")" ;;
        -libdir)
            check_absolute_path "$2"
            LIBDIR="$(remove_trailing_slash "$2")" ;;
        -mandir)
            check_absolute_path "$2"
            MANDIR="$(remove_trailing_slash "$2")" ;;
        -prefix)
            check_absolute_path "$2"
            PREFIX="$(remove_trailing_slash "$2")"
            BINDIR="$PREFIX/bin"
            LIBDIR="$PREFIX/lib/omicrob"
            MANDIR="$PREFIX/man" ;;
        *)
        usage "Don't know what to do with \"$1\""
    esac
    shift
    shift
done

################################################################################

echo -n "\
OCAMLCLEAN = $OCAMLCLEAN
BINDIR = $BINDIR
LIBDIR = $LIBDIR
MAN1DIR = $MANDIR/man1
MAN3DIR = $MANDIR/man3
OCAMLC = $OCAMLC -w A -warn-error A -safe-string -strict-formats -strict-sequence
OCAMLOPT = $OCAMLOPT -w A -warn-error A -safe-string -strict-formats -strict-sequence
OCAMLDOC = $OCAMLDOC
OCAMLBUILD = $OCAMLBUILD -cflags -w,A,-warn-error,A,-safe-string,-strict-formats,-strict-sequence -lflags -w,A,-warn-error,A,-safe-string,-strict-formats,-strict-sequence -no-links -classic-display
SRC = $ROOT/src
BIN = $ROOT/bin
LIB = $ROOT/lib
ETC = $ROOT/etc
define compile
        @make --no-print-directory -q -C \$1 && \
        make --no-print-directory -C \$1 || \
        make -C \$1
endef
define clean
        @make --no-print-directory -C \$1 clean > /dev/null
endef

" > etc/Makefile.conf

################################################################################

echo -n "\
let libdir = \"$LIBDIR\"
let ocaml = \"$OCAML\"
let ocamlc = \"$OCAMLC\"
let ocamlclean = \"$OCAMLCLEAN\"
let version = \"$VERSION\"

" > etc/config.ml

################################################################################
