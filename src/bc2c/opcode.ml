(******************************************************************************)

let new_opcode =
  let cnt = ref (-1) in
  fun () -> incr cnt; assert (!cnt < 256); !cnt

let new_opcode_12 () =
  let op_1B = new_opcode () in
  let op_2B = new_opcode () in
  (op_1B, op_2B)

let new_opcode_124 () =
  let op_1B = new_opcode () in
  let op_2B = new_opcode () in
  let op_4B = new_opcode () in
  (op_1B, op_2B, op_4B)
    
(******************************************************************************)

let acc0                  = new_opcode ()
let acc1                  = new_opcode ()
let acc2                  = new_opcode ()
let acc3                  = new_opcode ()
let acc4                  = new_opcode ()
let acc5                  = new_opcode ()
let acc6                  = new_opcode ()
let acc7                  = new_opcode ()
let acc                   = new_opcode ()
let push                  = new_opcode ()
let pushacc1              = new_opcode ()
let pushacc2              = new_opcode ()
let pushacc3              = new_opcode ()
let pushacc4              = new_opcode ()
let pushacc5              = new_opcode ()
let pushacc6              = new_opcode ()
let pushacc7              = new_opcode ()
let pushacc               = new_opcode ()
let pop                   = new_opcode ()
let assign                = new_opcode ()
let envacc1               = new_opcode ()
let envacc2               = new_opcode ()
let envacc3               = new_opcode ()
let envacc4               = new_opcode ()
let envacc                = new_opcode ()
let pushenvacc1           = new_opcode ()
let pushenvacc2           = new_opcode ()
let pushenvacc3           = new_opcode ()
let pushenvacc4           = new_opcode ()
let pushenvacc            = new_opcode ()
let push_retaddr          = new_opcode_124 ()
let apply                 = new_opcode ()
let apply1                = new_opcode ()
let apply2                = new_opcode ()
let apply3                = new_opcode ()
let appterm               = new_opcode ()
let appterm1              = new_opcode ()
let appterm2              = new_opcode ()
let appterm3              = new_opcode ()
let return                = new_opcode ()
let restart               = new_opcode ()
let grab                  = new_opcode ()
let closure               = new_opcode_124 ()
let closurerec            = new_opcode_124 ()
let offsetclosurem2       = new_opcode ()
let offsetclosure0        = new_opcode ()
let offsetclosure2        = new_opcode ()
let offsetclosure         = new_opcode ()
let pushoffsetclosurem2   = new_opcode ()
let pushoffsetclosure0    = new_opcode ()
let pushoffsetclosure2    = new_opcode ()
let pushoffsetclosure     = new_opcode ()
let getglobal             = new_opcode_12 ()
let pushgetglobal         = new_opcode_12 ()
let getglobalfield        = new_opcode_12 ()
let pushgetglobalfield    = new_opcode_12 ()
let setglobal             = new_opcode_12 ()
let atom0                 = new_opcode ()
let pushatom0             = new_opcode ()
let makeblock             = new_opcode ()
let makeblock1            = new_opcode ()
let makeblock2            = new_opcode ()
let makeblock3            = new_opcode ()
let makefloatblock        = new_opcode ()
let getfield0             = new_opcode ()
let getfield1             = new_opcode ()
let getfield2             = new_opcode ()
let getfield3             = new_opcode ()
let getfield              = new_opcode ()
let getfloatfield         = new_opcode ()
let setfield0             = new_opcode ()
let setfield1             = new_opcode ()
let setfield2             = new_opcode ()
let setfield3             = new_opcode ()
let setfield              = new_opcode ()
let setfloatfield         = new_opcode ()
let vectlength            = new_opcode ()
let getvectitem           = new_opcode ()
let setvectitem           = new_opcode ()
let getstringchar         = new_opcode ()
let setstringchar         = new_opcode ()
let branch                = new_opcode_124 ()
let branchif              = new_opcode_124 ()
let branchifnot           = new_opcode_124 ()
let switch                = new_opcode_124 ()
let boolnot               = new_opcode ()
let pushtrap              = new_opcode_124 ()
let poptrap               = new_opcode ()
let raise                 = new_opcode ()
let check_signals         = new_opcode ()
let c_call1               = new_opcode ()
let c_call2               = new_opcode ()
let c_call3               = new_opcode ()
let c_call4               = new_opcode ()
let c_call5               = new_opcode ()
let c_calln               = new_opcode ()
let const0                = new_opcode ()
let const1                = new_opcode ()
let const2                = new_opcode ()
let const3                = new_opcode ()
let constint              = new_opcode_124 ()
let pushconst0            = new_opcode ()
let pushconst1            = new_opcode ()
let pushconst2            = new_opcode ()
let pushconst3            = new_opcode ()
let pushconstint          = new_opcode_124 ()
let negint                = new_opcode ()
let addint                = new_opcode ()
let subint                = new_opcode ()
let mulint                = new_opcode ()
let divint                = new_opcode ()
let modint                = new_opcode ()
let andint                = new_opcode ()
let orint                 = new_opcode ()
let xorint                = new_opcode ()
let lslint                = new_opcode ()
let lsrint                = new_opcode ()
let asrint                = new_opcode ()
let eq                    = new_opcode ()
let neq                   = new_opcode ()
let ltint                 = new_opcode ()
let leint                 = new_opcode ()
let gtint                 = new_opcode ()
let geint                 = new_opcode ()
let offsetint             = new_opcode_124 ()
let offsetref             = new_opcode_124 ()
let isint                 = new_opcode ()
let getmethod             = new_opcode ()
let beq                   = new_opcode_124 ()
let bneq                  = new_opcode_124 ()
let bltint                = new_opcode_124 ()
let bleint                = new_opcode_124 ()
let bgtint                = new_opcode_124 ()
let bgeint                = new_opcode_124 ()
let ultint                = new_opcode ()
let ugeint                = new_opcode ()
let bultint               = new_opcode_124 ()
let bugeint               = new_opcode_124 ()
let getpubmet             = new_opcode ()
let getdynmet             = new_opcode ()
let stop                  = new_opcode ()

(******************************************************************************)
